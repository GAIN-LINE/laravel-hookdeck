<?php
/**
 * ConnectionsApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  Hookdeck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Hookdeck Admin REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@hookdeck.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Hookdeck\Test\Api;

use \Hookdeck\Configuration;
use \Hookdeck\ApiException;
use \Hookdeck\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ConnectionsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Hookdeck
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ConnectionsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for countConnections
     *
     * Count connections.
     *
     */
    public function testCountConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createConnection
     *
     * Create a connection.
     *
     */
    public function testCreateConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteConnection
     *
     * Delete a connection.
     *
     */
    public function testDeleteConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for disableConnection
     *
     * Disable a connection.
     *
     */
    public function testDisableConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for disableConnectionArchive
     *
     * Disable a connection.
     *
     */
    public function testDisableConnectionArchive()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for enableConnection
     *
     * Enable a connection.
     *
     */
    public function testEnableConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for enableConnectionUnarchive
     *
     * Enable a connection.
     *
     */
    public function testEnableConnectionUnarchive()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getConnection
     *
     * Get a single connection.
     *
     */
    public function testGetConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getConnections
     *
     * Get connections.
     *
     */
    public function testGetConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for pauseConnection
     *
     * Pause a connection.
     *
     */
    public function testPauseConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for unpauseConnection
     *
     * Unpause a connection.
     *
     */
    public function testUnpauseConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateConnection
     *
     * Update a connection.
     *
     */
    public function testUpdateConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for upsertConnection
     *
     * Update or create a connection.
     *
     */
    public function testUpsertConnection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
